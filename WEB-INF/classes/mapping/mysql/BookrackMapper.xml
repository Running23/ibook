<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ibook.mappers.BookrackMapper" >
  <resultMap id="BaseResultMap" type="com.ibook.model.Bookrack" >
    <id column="bookrack_id" property="bookrackId" jdbcType="INTEGER" />
    <result column="bookrack_ip" property="bookrackIp" jdbcType="VARCHAR" />
    <result column="bookrack_state" property="bookrackState" jdbcType="TINYINT" />
    <result column="bookrack_barcode" property="bookrackBarcode" jdbcType="VARCHAR" />
    <result column="bookrack_shelf_num" property="bookrackShelfNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bookrack_id, bookrack_ip, bookrack_state, bookrack_barcode, bookrack_shelf_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ibook.model.BookrackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bookrack
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bookrack
    where bookrack_id = #{bookrackId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bookrack
    where bookrack_id = #{bookrackId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ibook.model.BookrackExample" >
    delete from bookrack
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ibook.model.Bookrack" >
    insert into bookrack (bookrack_id, bookrack_ip, bookrack_state, 
      bookrack_barcode, bookrack_shelf_num)
    values (#{bookrackId,jdbcType=INTEGER}, #{bookrackIp,jdbcType=VARCHAR}, #{bookrackState,jdbcType=TINYINT}, 
      #{bookrackBarcode,jdbcType=VARCHAR}, #{bookrackShelfNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ibook.model.Bookrack" >
    insert into bookrack
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookrackId != null" >
        bookrack_id,
      </if>
      <if test="bookrackIp != null" >
        bookrack_ip,
      </if>
      <if test="bookrackState != null" >
        bookrack_state,
      </if>
      <if test="bookrackBarcode != null" >
        bookrack_barcode,
      </if>
      <if test="bookrackShelfNum != null" >
        bookrack_shelf_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookrackId != null" >
        #{bookrackId,jdbcType=INTEGER},
      </if>
      <if test="bookrackIp != null" >
        #{bookrackIp,jdbcType=VARCHAR},
      </if>
      <if test="bookrackState != null" >
        #{bookrackState,jdbcType=TINYINT},
      </if>
      <if test="bookrackBarcode != null" >
        #{bookrackBarcode,jdbcType=VARCHAR},
      </if>
      <if test="bookrackShelfNum != null" >
        #{bookrackShelfNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ibook.model.BookrackExample" resultType="java.lang.Integer" >
    select count(*) from bookrack
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bookrack
    <set >
      <if test="record.bookrackId != null" >
        bookrack_id = #{record.bookrackId,jdbcType=INTEGER},
      </if>
      <if test="record.bookrackIp != null" >
        bookrack_ip = #{record.bookrackIp,jdbcType=VARCHAR},
      </if>
      <if test="record.bookrackState != null" >
        bookrack_state = #{record.bookrackState,jdbcType=TINYINT},
      </if>
      <if test="record.bookrackBarcode != null" >
        bookrack_barcode = #{record.bookrackBarcode,jdbcType=VARCHAR},
      </if>
      <if test="record.bookrackShelfNum != null" >
        bookrack_shelf_num = #{record.bookrackShelfNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bookrack
    set bookrack_id = #{record.bookrackId,jdbcType=INTEGER},
      bookrack_ip = #{record.bookrackIp,jdbcType=VARCHAR},
      bookrack_state = #{record.bookrackState,jdbcType=TINYINT},
      bookrack_barcode = #{record.bookrackBarcode,jdbcType=VARCHAR},
      bookrack_shelf_num = #{record.bookrackShelfNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ibook.model.Bookrack" >
    update bookrack
    <set >
      <if test="bookrackIp != null" >
        bookrack_ip = #{bookrackIp,jdbcType=VARCHAR},
      </if>
      <if test="bookrackState != null" >
        bookrack_state = #{bookrackState,jdbcType=TINYINT},
      </if>
      <if test="bookrackBarcode != null" >
        bookrack_barcode = #{bookrackBarcode,jdbcType=VARCHAR},
      </if>
      <if test="bookrackShelfNum != null" >
        bookrack_shelf_num = #{bookrackShelfNum,jdbcType=INTEGER},
      </if>
    </set>
    where bookrack_id = #{bookrackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ibook.model.Bookrack" >
    update bookrack
    set bookrack_ip = #{bookrackIp,jdbcType=VARCHAR},
      bookrack_state = #{bookrackState,jdbcType=TINYINT},
      bookrack_barcode = #{bookrackBarcode,jdbcType=VARCHAR},
      bookrack_shelf_num = #{bookrackShelfNum,jdbcType=INTEGER}
    where bookrack_id = #{bookrackId,jdbcType=INTEGER}
  </update>
</mapper>