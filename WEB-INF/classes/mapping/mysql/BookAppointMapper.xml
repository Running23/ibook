<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ibook.mappers.BookAppointMapper" >
  <resultMap id="BaseResultMap" type="com.ibook.model.BookAppoint" >
    <id column="book_appoint_id" property="bookAppointId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="reader_id" property="readerId" jdbcType="INTEGER" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="getbook_time" property="getbookTime" jdbcType="DATE" />
    <result column="borrow_time" property="borrowTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    book_appoint_id, book_id, reader_id, order_time, getbook_time, borrow_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ibook.model.BookAppointExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_appoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book_appoint
    where book_appoint_id = #{bookAppointId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_appoint
    where book_appoint_id = #{bookAppointId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ibook.model.BookAppointExample" >
    delete from book_appoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ibook.model.BookAppoint" >
    insert into book_appoint (book_appoint_id, book_id, reader_id, 
      order_time, getbook_time, borrow_time
      )
    values (#{bookAppointId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{readerId,jdbcType=INTEGER}, 
      #{orderTime,jdbcType=TIMESTAMP}, #{getbookTime,jdbcType=DATE}, #{borrowTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ibook.model.BookAppoint" >
    insert into book_appoint
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookAppointId != null" >
        book_appoint_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="readerId != null" >
        reader_id,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="getbookTime != null" >
        getbook_time,
      </if>
      <if test="borrowTime != null" >
        borrow_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookAppointId != null" >
        #{bookAppointId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null" >
        #{readerId,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="getbookTime != null" >
        #{getbookTime,jdbcType=DATE},
      </if>
      <if test="borrowTime != null" >
        #{borrowTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ibook.model.BookAppointExample" resultType="java.lang.Integer" >
    select count(*) from book_appoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book_appoint
    <set >
      <if test="record.bookAppointId != null" >
        book_appoint_id = #{record.bookAppointId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.readerId != null" >
        reader_id = #{record.readerId,jdbcType=INTEGER},
      </if>
      <if test="record.orderTime != null" >
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.getbookTime != null" >
        getbook_time = #{record.getbookTime,jdbcType=DATE},
      </if>
      <if test="record.borrowTime != null" >
        borrow_time = #{record.borrowTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book_appoint
    set book_appoint_id = #{record.bookAppointId,jdbcType=INTEGER},
      book_id = #{record.bookId,jdbcType=INTEGER},
      reader_id = #{record.readerId,jdbcType=INTEGER},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      getbook_time = #{record.getbookTime,jdbcType=DATE},
      borrow_time = #{record.borrowTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ibook.model.BookAppoint" >
    update book_appoint
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null" >
        reader_id = #{readerId,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="getbookTime != null" >
        getbook_time = #{getbookTime,jdbcType=DATE},
      </if>
      <if test="borrowTime != null" >
        borrow_time = #{borrowTime,jdbcType=INTEGER},
      </if>
    </set>
    where book_appoint_id = #{bookAppointId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ibook.model.BookAppoint" >
    update book_appoint
    set book_id = #{bookId,jdbcType=INTEGER},
      reader_id = #{readerId,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      getbook_time = #{getbookTime,jdbcType=DATE},
      borrow_time = #{borrowTime,jdbcType=INTEGER}
    where book_appoint_id = #{bookAppointId,jdbcType=INTEGER}
  </update>
</mapper>