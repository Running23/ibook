<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID"  version="2.5">
	<display-name>ibook</display-name>

	<!-- 配置首页 -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>constantClassNames</param-name>
		<param-value>
      com.ibook.constant.Constants
      <!-- com.handback.constants.Constants,com.handback.CdConstants -->
    </param-value>
	</context-param>
	<!-- 加载全局静态变量 -->
	<listener>
		<listener-class>com.ibook.listener.ConstantLoaderListener</listener-class>
	</listener>



	<!-- log4j -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>
	<context-param>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>True</param-value>
	</context-param>
	<!-- 多个项目要对webAppRootKey进行配置,否则如果tomcat里面有多个相同的会报错 -->
	<context-param>  
        <param-name>webAppRootKey</param-name>  
        <param-value>spring.webapp.root</param-value>  
    </context-param>  
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>3000</param-value>
	</context-param>
	<!-- 先开启Log4J,再去启动spring等一些你需要的东西，有助于报错时日志的输出 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- 配置启动SpringIOC容器的 ContextLoaderListener -->
	<!-- needed for ContextLoaderListener -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- Bootstraps the root web application context before servlet initialization -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

<!-- 	<listener> -->
<!-- 		<listener-class>com.ibook.bookmahout.TasteIndexListener</listener-class> -->
<!-- 	</listener> -->
	<!-- 配置启动SpringMVC容器的 DispatcherServlet -->
	<!-- The front controller of this Spring Web application, responsible for 
		handling all application requests -->
	<servlet>
		<servlet-name>springmvcDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc-config.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Map all requests to the DispatcherServlet for handling -->
	<servlet-mapping>
		<servlet-name>springmvcDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


	<!-- Spring自带的字符编码过滤器，spring字符集过滤器，只对post提交有效，所以发送请求时必须显式地注明是post提交。 -->
	<filter>
		<filter-name>springUtf8Encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<!-- 默认情况下，forceEncoding是为false的，此时，不会设置response的输出编码方式 -->
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>springUtf8Encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置 HiddenHttpMethodFilter: 把 POST 请求转为 DELETE、PUT 请求 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- springmvc不拦截静态文件 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.ico</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.jpeg</url-pattern>
		<url-pattern>*.woff</url-pattern>
		<url-pattern>*.woff2</url-pattern>
		<url-pattern>*.ttf</url-pattern>
		<url-pattern>*.swf</url-pattern>
		<url-pattern>*.appcache</url-pattern>
	</servlet-mapping>

	<!-- 404 页面不存在错误 -->
	<!-- <error-page> <error-code>404</error-code> <location>/common/404.jsp</location> 
		</error-page> 500 服务器内部错误 <error-page> <error-code>500</error-code> <location>/common/500.jsp</location> 
		</error-page> Java.lang.Exception异常错误,依据这个标记可定义多个类似错误提示 <error-page> <exception-type>java.lang.Exception</exception-type> 
		<location>/common/error.jsp</location> </error-page> -->

	<!-- 15分钟失效. -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!--Shiro配置 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>
